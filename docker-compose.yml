version: "3.8"

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - spark-net
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
    networks:
      - spark-net
    depends_on:
      - zookeeper

  data-generator:
    build: ./data_generator
    container_name: data-generator
    volumes:
      - ./data_generator:/app
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=equipments
    command: ["make", "start"]
    networks:
      - spark-net
    depends_on:
      - kafka

  python-consumer:
    build: ./python_consumer
    container_name: python-consumer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=equipments
      - SQLITE_PATH=/database/measurements.db
    volumes:
      - ./python_consumer:/app
      - ./database:/app/database
    command: ["make", "start"]
    networks:
      - spark-net
    depends_on:
      - kafka

  grafana:
    build: ./grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=frser-sqlite-datasource
    volumes:
      - ./grafana:/grafana
    networks:
      - spark-net
    depends_on:
      - python-consumer

  spark-master:
    image: bitnami/spark:3.5
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
    hostname: spark-master
    volumes:
      - ./spark_consumer/app/spark-data:/spark-data
    networks:
      - spark-net
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 2G

  spark-worker:
    image: bitnami/spark:3.5
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    volumes:
      - ./spark_consumer/app/spark-data:/spark-data
    networks:
      - spark-net
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 1G
  
  spark-consumer:
    build: ./spark_consumer
    container_name: spark-consumer
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=equipments
      - SPARK_MASTER=spark://spark-master:7077  # Add this
    volumes:
      - ./spark_consumer:/app
    networks:
      - spark-net
    depends_on:
      - kafka
      - spark-master
      - spark-worker


volumes:
  spark-data:
    external: true

networks:
  spark-net:
    driver: bridge
